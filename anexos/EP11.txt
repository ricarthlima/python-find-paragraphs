Future Generation Computer Systems 80 (2018) 421–429

Contents lists available at ScienceDirect

Future Generation Computer Systems
journal homepage: www.elsevier.com/locate/fgcs

Proactive user-centric secure data scheme using attribute-based
semantic access controls for mobile clouds in financial industry
Meikang Qiu a,b,∗ , Keke Gai b , Bhavani Thuraisingham c , Lixin Tao b , Hui Zhao d
a

School of Computer Science and Information Technology, Hubei Engineering University, Hubei, 432000, China

b

Department of Computer Science, Pace University, New York, NY 10038, USA

c

Department of Computer Science, The University of Texas at Dallas, Richardson, TX 75083-0688, USA

d

Software School, Henan University, Kaifeng, Henan, 475000, China

highlights
• Proactive user-centric data protection scheme for the financial industry.
• Use the attribute-based semantic access control to restrict the data accesses.
• Achieve high level security by avoiding unexpected operations on the cloud side.

article

info

Article history:
Received 19 September 2015
Received in revised form
6 December 2015
Accepted 13 January 2016
Available online 4 February 2016
Keywords:
Proactive secure scheme
Privacy protection
Mobile cloud computing
Cyber security
Financial industry

abstract
As one of the most significant issues in the financial industry, customers’ privacy information protection
has been considered a challenging research over years. The constant emergence of the novel technologies
often leads to dynamic threats from both internal and external service providers. We consider the
implementations of mobile cloud-based financial services an important approach of service provisions,
which also causes risks to privacy protections due to the data sharing with the unknown third parties.
The data generated by mobility are usually associated with mobile users’ personal privacy information.
This paper addresses this issue and proposes an approach proactively protect financial customers’ privacy
information using Attributed-Based Access Control (ABAC) as well as data self-deterministic scheme. The
proposed approach is called Proactive Dynamic Secure Data Scheme (P2DS), which aims to guarantee
the unanticipated parties cannot reach the privacy data. There are two main algorithms supporting the
proposed scheme, which are Attribute-based Semantic Access Control (A-SAC) Algorithm and Proactive
Determinative Access (PDA) Algorithm. The main contributions of this paper have three aspects. First, we
propose a semantic approach for constraining data accesses. Second, we propose a user-centric approach
that proactively prevents users’ data from unexpected operations on the cloud side. Finally, the proposed
scheme has a higher-level secure sustainability since it can deal with dynamic threats, including the
emerging and future hazards. We have examined that our proposed scheme had a quality performance
matching our expected goal.
© 2016 Elsevier B.V. All rights reserved.

1. Introduction
The recent dramatic growth of the electronic and digital
technologies has provisioned a variety of novel approaches for
service offerings in financial industry. Along with the new service

∗ Corresponding author at: Department of Computer Science, Pace University,
New York, NY 10038, USA. Tel.: +1 914 773 3253; fax: +1 914 989 8111.
E-mail addresses: qiumeikang@yahoo.com (M. Qiu), kg71231w@pace.edu
(K. Gai), bxt043000@utdallas.edu (B. Thuraisingham), ltao@pace.edu (L. Tao),
zhh@henu.edu.cn (H. Zhao).
http://dx.doi.org/10.1016/j.future.2016.01.006
0167-739X/© 2016 Elsevier B.V. All rights reserved.

approaches, the Financial Service Institutes (FSIs) also face diverse
threats caused by new techniques or within new technical
circumstances. Traditional threats had been addressed by the prior
researches to govern the risks within an anticipated scope, such as
malware attacks, network-traveling worms, and data abuse [1–3].
However, the new hazards generated by the emerging techniques
are usually unanticipated. The masked operations in the clouds
increase the chances of information leaks [4,5]. Contemporary
deployed security approaches cannot effectively deal with threats.
This paper concentrates on this issue and proposes a proactive
user-centric secure data scheme that implements Attributed-Based
Access Controls (ABAC) and a data self-deterministic scheme in

422

M. Qiu et al. / Future Generation Computer Systems 80 (2018) 421–429

Fig. 1. Architecture of Proactive Dynamic Secure Data Scheme (P2DS).

mobile clouds to achieving the prevention of all potential threats
in the financial industry.
The proposed scheme focuses on the emerging threats appearing in multiple manners. The varied threats manners often raise
financial crisis, disruptions, and execution obstacles [6]. Kaspersky Lab ZAO, for example, asserted that a large number of banks
were facing a serious problem of online robbing and the amount of
the stolen money could be over million dollars [7]. The losses are
also made for other financial organizations due to the impacts of
the technical development [8,9]. When investigating the cases of
the information leakage, it is noticed that one of the major causes
is applying mobility and data mitigations. The vulnerabilities can
take place when the users’ data can be reached by other service
institutions offering lower-level security.
Moreover, there is no ubiquitous approach solving the problem
above, even though the issue can be successfully identified. Data
mitigations to the clouds result in unawareness when other
organizations use customers’ privacy data [10,11]. Financial users
are unaware of the hazards behind the operations masked in the
clouds. This paper focuses on avoiding untrusted parties reaching
the data stored on the cloud side and proposes an approach, named
as Proactive Dynamic Secure Data Scheme (P2DS). This scheme
is designed to protect sensitive financial data within a dynamic
operational context. The research work is mainly based on the prior
research work [12].
Fig. 1 represents the architecture of P2DS provisioning a
user-centric data protection approach. Shown in the figure, the
proposed P2DS architecture addresses the demands of financial
mobile customers and FSIs. The financial business parties, including FSIs and financial mobile users, communicate data transfer via
the services offered by the cloud service providers. Mobile users
are data owners who determine the attribute constraints. A higherlevel security can be achieved by determining sets of the attributes
possessed by the data users. Two layers of the data users identified
in the architecture are Trusted Layer (TL) and Unknown/Untrusted
Layer (UL). The attribute constraints mainly constrain or limit the
accesses on UL. The proposed P2DS paradigm can ensure the data
are encrypted as well as initiatively determine who has the authority to access the data.
For the expected goal of P2DS, we propose three main algorithms. First, the Static Decryption Attribute Algorithm (SDAA) is
designed to the authorizations of the decryptions from which the
status of the trusted parties will be determined based on the Static
Decryption Attributes (SDA). Next, the Corresponded Decryption Attribute Algorithm (CDAA) is to assign the Corresponded Decryption
Attributes (CDA) along with the decryption authorizations. Furthermore, we generate the Attribute-based Semantic Access Control (ASAC) algorithm that constrains the data accesses using semantic
access control techniques. Finally, we propose the Proactive Determinative Algorithm (PDA) to purpose whether the attributes need
to be encrypted.
The main contributions of this paper are threefold:

• We produce an attributed-based data protection approach
using semantic access techniques.

• We propose a user-centric approach proactively avoiding
unexpected operations or unanticipated parties on the cloud
side for the purpose of the data protections.
• The proposed scheme provides a higher-level secure sustainability due to the limitations of the data accesses based on configuring user attribute constraints.
The remainder of this paper is organized by the follows. In
Section 2, recent related work in the field are reviewed. Section 3
gives a motivational example explaining the implementation of
the proposed scheme. Section 4 exhibits the concepts and models
of our proposed mechanism. Next, Section 5 represents the main
algorithms. The experimental results are represented in Section 6
and the conclusions are stated in Section 7.
2. Related work
This section focuses on reviewing recent academic achievements of the data protections in clouds as well as data secure approaches in the financial industry. The differences between the
prior related work and our proposed scheme are stated in this section via comparisons.
First, a proactive secure data scheme [12] was proposed to
protect financial customers’ data from untrusted parties’ usage
in mobile clouds. This approach concentrated on the controls of
the data owners and mainly used SDA and CDA. Our paper is an
extended work of this scheme by adding semantic constrains of
the access controls. Moreover, the extended contents also include
formulating the mechanism by mathematical representations and
new algorithms.
Next, as a secure approach offering high level security, AttributeBased Encryption (ABE) has been explored by researchers over
years. The implementations of ABE have been applied in telehealth field for securing patient privacy information in cloud
systems [13–15]. For example, the policy-based ABE has been
examined to being a proper approach of preventing personal
health records from unexpected usages [16]. Another example was
that combining ABE with healthcare social networks can enable
an efficient emergency management [17]. However, the attempts
in the tele-health fields did not solve the problems caused by the
unconstrained data accesses.
In addition, using ABE approaches in the financial industry was
also explored by the previous researches [18,19]. An investigation
was done for examining the effect of the innovation attributes
and knowledge-based trust in the mobile banking field [20]. In
general, role-based solutions are treated as an optional solution
constraining the access from different role perspectives [21].
Nevertheless, rare prior researches had addressed controlling the
access constrains from the unknown data users for dealing with
unanticipated risks.

M. Qiu et al. / Future Generation Computer Systems 80 (2018) 421–429

423

Fig. 2. The example of the structure for Static Decryption Attribute (SDA).

Furthermore, cloud-based solutions were also considered
effective means for financial service offerings, in which the security
issues are highly concerned by the prior research [22–24]. An
approach was proposed for outsourced revocation using identitybased encryption in clouds [25]. Another attempt was using the
policy-based ABE to assure that the sensitive data were deleted
after the usage [26,27]. Most prior researches investigated the
implementations of cloud-based ABE in a general perspective. A
specific approach designed for financial organizations had been
rarely addressed.
Moreover, attribute-based access control techniques have been
dramatically developed in recent years. Combining with cloud
services, an effective access control method can provision a
hierarchical access management [28] and cryptographic solutions
to data outsourcing [29]. The mechanisms of controlling accesses
are based on the configurations by which the privacy data are
protected [30]. Despite multiple attempts in prior researches, the
specific research on controlling unanticipated data users’ accesses
in the financial industry had been seldom addressed [12].
In summary, protecting users’ privacy information from the
unawareness and non-anticipation is still a challenging issue for
FSIs, in which various threats endanger the data security. The
approach proposed by this paper uses the access control and ABE
techniques, which focus on the demands of the financial industry.
3. Motivational example
This section exhibits a motivational example describing the implementation of the proposed mechanism. The scenario assumes
that the financial clients operate online transactions by using mobile apps running on clients’ mobile devices, such as smartphones
or tablets [31,32]. The motivation of using our proposed scheme is
to secure the service executions accessed by multiple parities.
The proposed scheme encrypts part of the clients’ information
and only provides unknown parties with the information that is
strictly required for delivering services. Other usage purposes that
do not have a direct relationship with transaction services will be
prohibited in this case. The key attributes of the services related to
the users’ privacy data will be encrypted and converted into nonhuman-friendly formats, such as users’ real names.
The required attributes in our model are used to determine
whether the data users can have the access to decrypt the
document. For example, we give an attribute-based policy
(‘‘New York’’ AND ‘‘(Authorized Financial Organization’’ OR ‘‘Bank
Name’’)) to measure the matching status of the users’ attributes.
Only those users who match this policy can have the access to the
decryption.
Fig. 2 represents an example of the structure for SDAs. As
shown in the figure, ∃ a set of {SDA}, in which {SDA} =
{SDA1 , SDA2 , . . . , SDA5 }. The top gate is associated with a full
attribute access, A. In this case, there are a few sets of the attributes

Fig. 3. The example of the structure for Corresponded Decryption Attribute (CDA).

Fig. 4. An example of the access encryption control structure.

having the full access with different combinations of the attributes.
The mathematical expression is {⟨SDA1 ⟩∥⟨SDA2 , SDA3 , SDA4 ⟩∥
⟨SDA4 , SDA5 ⟩} ⇒ A.
Fig. 3 represents an example of the structure for CDAs. The
figure shows three CDAs, including A1 , A2 , and An . ∃ A =
{A1 , A2 , . . . , An }. In addition, ∃ a set of CDAs, in which {CDA} =
{CDA1 , CDA2 , . . . , CDA6 }. We use the following expressions to
represent the access control rules. {⟨CDA1 ⟩ ∥ ⟨CDA2 ⟩ ∥ ⟨CDA3 ⟩} ⇒
A1 . {⟨CDA3 ⟩} ⇒ A2 .{⟨CDA2 ⟩ ∥ ⟨CDA4 , CDA5 ⟩ ∥ ⟨CDA5 , CDA6 ⟩ ∥
⟨CDA4 , CDA5 , CDA6 ⟩} ⇒ An .
Moreover, our proposed scheme aims combining multiple
accesses. The first step is using CP-ABE to determine a series of attributes to formulate the encryptions aligned with the
data owners. The set of attributes can be represented as A =
{A1 , A2 , A3 , . . . , An }. Ai refers to an individual attribute. For instance, a mobile financial user’s attribute set Amf can be Amf =
{Name, Age, Gender, Address, Zip Code, Location, Request Identity, Account Number, Password, Reminder Question, Account Activity, Access
Frequency}. A subset of attributes is an Asub . Moreover, each data
user should hold one or a set of attributes Bmf , which must be a
nonvoid subset of Amf , represented as Bmf ⊆ Amf . The method of
evaluating the authorizations is using an Access Encryption Structure (AES).
An example of the AES is given in Fig. 4. ‘‘∨’’ is a gate operator
denoting that the decryption is allowed if any subset or individual
attribute, Asub or Ai , matches the requirement, which is represented
as F (i) = (α(i) ∨ β(i)). ‘‘∧’’ is the other gate operator that
allows data users to decrypt a ciphertext only when all attribute
assignments are true. It can be formulated as G(j) = (α(j) ∧ β(j)).
As displayed in Fig. 4, a few attributes An s are exhibited. A true
value will be returned when (A1 ∧ A2) ∧ A3. Another true value
return example is when A6 ∧ A7 or A5 ∨ A3 ∧ A4. However, a false
value occurs when (A1 ∧ A3) ∧ A5.

424

M. Qiu et al. / Future Generation Computer Systems 80 (2018) 421–429

Fig. 5. Collusion resistance in P2DS.
Fig. 6. Conceptual structure of static decryption attribute (SDA).

Next, the key (KT ) will be generated between mobile users
and the trusted parties, based on the results of the first step. The
key generation will depend on the master key and predefined
attribute sets. One or a few specific attributes, AD , are used for
decryptions. The AD is defined by data owners, which are designed
for determining the parties who can access the data. Only data
users who have the attributes matching AD can gain the private
decryption key. This process is a proactive protection approach for
securing privacy data.
Untrusted data users are not allowed to reach the data until
the permission is issued. The permission can be a partial access.
For example, financial clients’ names need to be converted into
random numbers when big data analysis is executed by the
unknown third party.
4. Concepts and the proposed model
4.1. Attribute-based encryption
Attribute-based Encryption (ABE) is an encryption approach that
addresses logging attributes and determining the authorizations
and encryptions [28,16]. The private key is related to a series of
attributes represented in strings [33]. It dedicates that decryptions
can be only accomplished when the attributes within the private
key can successfully match the paths of the access structure.
Two common ABEs include Key-Policy Attribute-based Encryption (KP-ABE) [34] and Ciphertext-Policy Attribute-Based Encryption
(CP-ABE) [35]. KP-ABE focuses on a set of descriptive attributes that
are aligned with policies. However, using KP-ABE has difficulties in
controlling the selections of data users because of its policy-based
methods. Therefore, our proposed scheme uses CP-ABE in order to
obtain the controllability of the data users. The private key is considered to be associated with ciphertext-based attributes.
4.2. P2DS collusion resistance
Collusion Resistance is a crucial technique [36] for generating
the private key in our proposed scheme, which will be used in
the proposed P2DS. The operating principle is to enable untrusted
parties on the clouds to gain the access to some specific attributes.
Other unauthorized attributes are blinded. Term Collusion implies
the correspondences between data owners and data users, which
means the private key can be decrypted if the requirements
are matched. Term Resistance further restricts the decryption
condition to only when the requirements are matched.
Fig. 5 exhibits a structure of the collusion resistance in P2DS.
The top row represents the attributes the data users need to access.
The middle row displays a set of CDA combinations that are used to
generate private keys for accessing to the colluded attributes. For
each attribute A(n), the corresponding CDA combination, Cn can
be either unique or multiple. The collusion–resistance relationship
is represented by broken lines. The bottom row represents that
each CDA combination consists of a set of CDAs. Accessing each
attribute in the set {A1, A2, A3, . . . , An} needs a strict match of CDA
combinations.

4.3. Proactive Dynamic Secure Data Scheme (P2DS)
P2DS is based on implementing ABE and collusion resistance.
Two main parties are involved in P2DS, including Data Owner and
Data User.

• Data Owner A Data Owner refers to the party who has a full
authorization of accessing the data and need to determine what
other parties have authorizations to the data or some certain
attributes.
• Data User A Data User refers to the party who intends to access
the data via or on the clouds. This party can be either a trusted
or an untrusted party. A trusted data user holds the private key
having the full access.
• Decryption Attributes The Decryption Attributes are attributes
that are used by data users to decrypt the key. Our proposed
scheme mainly uses two types of decryption attributes using
different decryption structures, including SDAs and CDAs.
Furthermore, a Proactive Secure Scheme is an approach that
data owners can actively protect their data no matter how
external operating environments change. Untrusted data users can
only access some data by using the private key associated with
CDAs. Other attributes that are not associated with CDAs will be
encrypted.
There are three types of AD , including {ASD , ACD , AUD }. Any trusted
party has a full level of authority for accessing the data by using
ASD (s), which is an SDA set. The conceptual structure of SDA is
represented in Fig. 6. As shown in the figure, the key generation
and the decryption are based on the attribute sets, ASD , and the rule
engine. ‘‘A’’ denotes the full decryption access. We define ∃ as a set
{SDA} consisting of single or a number of attribute sets {SDA1 , SDA2 ,

−→
−→
−→
the attributes in the set {SDA}, where {SDA} = {S⃗A1 , S⃗A1 , . . . , S⃗An },
n ∈ N. The Rule Engine is a series of gate operations combining
a chain of requirement channels or paths, denoted as RE. ∀ sets
−→
−→
−→
−→
{SDA}sub ⊆ {SDA}, if {SDA}sub can go through the RE, then {SDA}sub
−→
is a set with the decryption access, denoted as {SDA}sub ⊗ RE =
ASD (s).

. . . , SDAn }. Data User → {SDA} represents that data users possess

Moreover, the conceptual structure of CDA is represented in
Fig. 7. As shown in the figure, the key generation and the decryption are based on the attribute sets, ASD , and the rule engine.
‘‘A1 , A2 , . . . , An ’’ denotes the decryption accesses to the certain
attributes, to which using the set CDA Set n can access. We define ∃ a set {CDA} consisting of single or a number of attribute

−→
−→
−→
data users possess the attributes in the set {CDA}, where {CDA}
−
→
−
→
−
→
= {S⃗A1 , S⃗A1 , . . . , S⃗An }, n ∈ N. ∀ sets {CDA}sub ⊆ {CDA}, if {CDA}sub
−→
can go through the RE, then {CDA}sub is a set with the decryption
−→
access, denoted as {CDA}sub ⊗ RE = ACD (s).
sets {CDA1 , CDA2 , . . . , CDAn }. Data User → {CDA} represents that

In addition, the third party needs one or a set of ACD (s),
Corresponded Decryption Attribute (CDA), to access some associated

M. Qiu et al. / Future Generation Computer Systems 80 (2018) 421–429

425

Table 1
Main notations and definitions.

Fig. 7. Conceptual structure of the corresponded decryption attribute (CDA).

data and other unconnected data will be encrypted. The structure
of the CDAs is given in Fig. 7. Finally, AUD s are regular attributes
of the third parties that cannot be used to access to any data,
which are Unknown Decryption Attributes (UDAs). For the purpose
of authorization, we only consider SDAs and CDAs.
These two sets of attributes are determined by data owners, including predefined static decryption attributes and predefined corresponded decryption attribute, denoted as SetSDA =
{ASD1 , ASD2 , ASD3 , . . . , ASDn } and SetCDA = {ACD1 , ACD2 , ACD3 , . . . , ACDn }. The
method of the access authorization determination is to assign other
parties private key, which is associated with one or a set of attributes predefined by the data owner. The attributes used in P2DS
are defined by Definition 1.
Definition 1. Let AD = {AD1 , AD2 , . . . , ADi }, i ∈ N be the set
referring to decryption attributes, represented as De ⇐ AxD , x
denotes the type of AD . ∃ setASD , Deau ⇐ ASD ; ∃ setACD , Deau att ⇐ ACD .
Define an attribute set R = {R1 , R2 , . . . , Rn }, i ∈ N, if R ⊆ ASD ,
then R = SetSDA ; else if R ⊆ ACD && @R ⊆ ASD , then R = SetCDA ;
otherwise, R = UDA.
Definition 1 represents the concept of the attribute sets that can
gain the decryption authorizations. This is the root of our proposed
paradigm. Moreover, we use both SDA and CDA to generate
private keys. Trusted parties can directly access the data by the
private keys made by SDAs. In our proposed paradigm, trusted
parties refer to organizations or individuals known by financial
service organizations or mobile financial users. The authorizations
are given or assigned by data owners, either financial service
organizations or mobile financial users.
5. Algorithms
This section exhibits our main algorithms, including SDAA,
CDAA, A-SAC, and PDA. The main notations and definitions used
in this paper are given in Table 1.
Algorithm 1 represents SDAA that is used to evaluate SDAs
for determining the decryption authorizations. Algorithm 1 is an
approach for assigning the authorizations between data owners
and trusted data users. Data users are supposed to have a full level
data access when all inputs {Inputav or Inputav (ν)} ⊆ SetSDA . The
phrases of Algorithm 1 are represented as follows:
1. Input one or multiple actual value for requiring the authorization of generating private key decryption.
2. If the gate operator is OR, check the correspondence of input
value and the predefined set of ASD .
3. The decryption key is returned if at least one input matches the
attributes in ASD . Otherwise, deny the request.
4. If the gate operator is AND, check the correspondence as the
same as step 2.

Notations

Definitions

ASD

Predefined static decryption attribute set

ACD
Inputav
Inputav (ν)
SetSDA

Predefined corresponded decryption attribute set
An actual input value
Multiple actual input values
A set of ASD , represented as {ASD1 , ASD2 , . . ., ASDn }

SetCDA
Deau
Deau att
KT

A set of ACD , represented as {ACD1 , ACD2 , . . ., ACDn }
Decryption authorization determination
Decryption authorization for certain attribute(s)
The key between data owners and trusted parties
The highest gate operator executing ‘‘OR’’
The highest gate operator executing ‘‘AND’’
A mediate value deriving from prior operations ∨ or ∧
The type of output
The encrypted output for untrusted parties
Unencrypted output for trusted parties

∨de
∧de
Medatt
OPde
OPde en
OPed un

Algorithm 1 Static Decryption Attribute Algorithm (SDAA)
Require: One or a set of ASD and input Inputav , Inputav (ν)
SetSDA = {ASD1 , ASD2 , ASD3 , . . . , ASDn }
Ensure: Deau
1: ∀ Inputav , Inputav (ν)
2: IF the evaluation is ∨de
3:
IF{Inputav ∥Inputav (ν)}⊆SetSDA ∥Medatt ⊆SetSDA
4:
Output Deau
5:
ELSE IF deny the request
6:
ENDIF
7: ELSE IF the evaluation is ∧de
8: /* There are at least two actual input values, Inputav (ν) */
9:
IF ∧de evaluates both Inputav ∥Inputav (ν) and Medatt
10:
IF ∀{Inputav ∥Inputav (ν) and Medatt }⊆SetSDA
11:
Output Deau
12:
ELSEIF deny the request
13:
ENDIF
14:
ELSEIF ∧de only evaluates Inputav ∥Inputav (ν)
15:
IF ∀Inputav ∥Inputav (ν)⊆SetSDA
16:
Output Deau
17:
ELSEIF deny the request
18:
ENDIF
19:
ELSEIF ∧de only evaluates Medatt
20:
IF ∀Medatt ⊆SetSDA
21:
Output Deau
22:
ELSEIF deny the request
23:
ENDIF
24:
ENDIF
25: ENDIF
5. If the examined values include both pure input(s) and
mediate value derived from prior operations, check all values’
correspondences. The same process as step 2.
6. The decryption key is returned if all examined values match
the attributes in the set ASD . Otherwise, deny the request.
7. If the examined values only include pure input(s), check the
correspondences as the same as step 5.
8. Return value via a process as the same as step 6.
9. If the examined values only include mediate value derived
from prior operations, check the correspondences as the same
as step 5.
10. The decryption key is returned if all examined values match
the attributes in the set ASD . Otherwise, deny the request.
Similarly, CDAA is generated to evaluate CDAs for determining
the decryption authorizations. CDAA is designed as an approach
for assigning the authorizations between data owners and trusted
data users. Data users are supposed to have a full level data access

426

M. Qiu et al. / Future Generation Computer Systems 80 (2018) 421–429

when all inputs {Inputav or Inputav (ν)} ⊆ SetSDA . Algorithm 2 shows
the pseudo codes of CDAA algorithm. The phrase process is similar
to the process of Algorithm 1.
Algorithm 2 Corresponded Decryption Attribute Algorithm
(CDAA)
Require: One or a set of ACD and input Inputav , Inputav (ν)
SetCDA = {ACD1 , ACD2 , ACD3 , . . . , ACDn }
Ensure: Deau att
1: ∀ Inputav , Inputav (ν)
2: IF the evaluation is ∨
3:
IF{Inputav ∥Inputav (ν)}⊆SetCDA ∥Medatt ⊆SetCDA
4:
Output Deau att
5:
ELSE IF deny the request
6:
ENDIF
7: ELSE IF the evaluation is ∧
8:
IF ∧ evaluates both Inputav ∥Inputav (ν) and Medatt
9:
IF∀{Inputav ∥Inputav (ν)andMedatt }⊆SetCDA
10:
Output Deau att
11:
ELSEIF deny the request
12:
ENDIF
13:
ELSEIF ∧ only evaluates Inputav ∥Inputav (ν)
14:
IF ∀Inputav ∥Inputav (ν)⊆SetCDA
15:
Output Deau att
16:
ELSEIF deny the request
17:
ENDIF
18:
ELSEIF ∧ only evaluates Medatt
19:
IF ∀Medatt ⊆SetCDA
20:
Output Deau att
21:
ELSEIF deny the request
22:
ENDIF
23:
ENDIF
24: ENDIF

j 
k


 [Q, M].
Match

Q×M→A=

m

m=1

AT


j 
k



 [Q, M] .
Match

(2)

j=1 k=1

Algorithm 3 represents the pseudo codes of the A-SAC algorithm.
Algorithm 3 Attribute-based Semantic Access Control (A-SAC)
Require: Uinput , Q
Ensure: Output the attribute sets Inputav , A
1: Input and initialize data sets Uinput and Q; Temp ← ∅
2: FOR ∀Uinput (i), do
3:
FOR ∀Qj in Q, do
4:
IF Uinput (i) matches the requirement of Qj
5:
Output ⟨Uinput (i), Qj ⟩
6:
Temp ← ⟨Uinput (i), Qj ⟩
7:
ENDIF
8:
ENDFOR
9: ENDFOR
10: ∀ ⟨Uinput (i), Qj ⟩ in Temp
11: Translate all elements in Temp by using semantic relations
12: Generate A based on Temp
13: Inputav ← A
14: RETURN Inputav , A

Algorithm 4 Proactive Determinative Algorithm (PDA)

In addition, for the purpose of identifying the data users
attribute, we propose the A-SAC algorithm that is designed to
measuring the data users’ attributes. This algorithm is used to
interconnect the data users and the access measurement. We
obtain users’ attributes set by applying a chain of activities via the
Question–Message–Answer (QMA). The attributes are associated
with the answers, which derive from the combinations of the
Questions and Messages. The attributes set A is used as the inputs,
denoting as A → Inputav (V ), where A = {A1 , A2 , . . . , An }, n ∈ N.
The Questions (Q) are predefined information requirements and
the Messages (M) are data collected for describing data users. The
attribute generation is denoted as Q × M → A.
The rule of the attribute generation follows the collusion
resistance principle. We define the inputs of the data users Uinput
as the set I. A matching operation takes place once a Uinput (i)
satisfies one requirement Qi in Q, denoted as a combination
⟨Qi , Uinput (i)⟩. Assume that there are k data user inputs and
j requirements. Obtaining all combinations requires maximum
 by k × j times. The set ∥Qj , Uinput (k)∥
matching operations Match
computation is expressed in Eq. (1).

∥Qj , Uinput (k)∥ =

is given in Eq. (2).

(1)

j=1 k=1

The outcomes of Eq. (1) ⇒ Q × M, which generates the set of
the data user’s attributes. The process of transferring from Q × M
outcomes to the attributes set is defined as an Attribute Translation
(AT), which is processed by semantic selections pointing at the
attributes in the predefined set A that has m attributes. Therefore,
the mathematical expression of the semantic attribute generation

Require: SetSDA , SetCDA and input Inputav , Inputav (ν)
Ensure: Determine the type of output, OPde
1: ∀ Inputav , Inputav (ν), execute Algorithm 1
2: IF return value is true
3:
Output Deau ←OPed un
4: ELSEIF execute Algorithm CDAA
5:
IF return value is true
6:
Output Deau att ← OPed un
7:
∀ other ASD and ACD ← execute encryption
8:
ELSEIF deny the request
9:
ENDIF
10: ENDIF
Finally, PDA algorithm is an execution algorithm combining the
algorithms above, which is shown in Algorithm 4. This algorithm
determines whether the attributes should be encrypted to the
data users. Both Algorithms 1 and 2 are applied in Algorithm 4.
The determination requires both predefined sets SetSDA and SetCDA .
The output will be determining whether the attributes should be
encrypted. In this algorithm, there are mainly two phrases.
1. Input and execute Algorithm 1 to see whether the data user
is a trusted party on the cloud. If a true value is returned, the
program ends. Otherwise the program jumps into the next step.
2. Execute CDAA algorithm to see whether the data user is
a corresponded trusted party on the cloud. If a true value
is returned, the program sends the required attributes and
encrypts the non-enlisted attributes. Otherwise, the program
ends.
6. Experiment and the results
We present our evaluations of the proposed scheme in this
section. Main evaluation approaches include both theoretical
assessments and experimental proofs.

M. Qiu et al. / Future Generation Computer Systems 80 (2018) 421–429

427

{(1k, 2k), (3k, 1k), (1k, 5k), (5k, 5k)}, corresponded with Settings 1–1, 1–2, 1–3, and 1–4.

• Setting 2: We configured one variable in evaluations, Uinput (i),
to measure different user inputs with the same semantic
requirements. The configurations included {Uinput (i)}
=
{1K, 1.5K, 2K, 2.5K, 3K, 3.5K, 4K, 4.5K, 5K, 5.5K}, corresponded
with Settings from 2–1 to 2–10.

Fig. 8. Some experimental results for semantic access control evaluations
implementing experimental setting 1.

6.1. Correctness
For the purpose of proving the correctness, we used Reductio
Ad Absurdum (RAA) method to measure the security performance
of the proposed scheme. We assume that there is an adversary A
who has an access to decryption with an unexpected attribute. A
obtained the access by repeatedly sending the dummy attribute
sets that are denoted as A = ⟨MA1 , MA2 , . . . , MAn ⟩ in a polynomial
time. The attack target has the following requirement, ⟨a, b, c ⟩. a
is the number of the attributes required for the access. b is the
number of the total attribute sets, b ≫ a. ci is the number of the
values for each attribute. A needs to find out the combination
and
 
Pb
b
the required attempt times are given as follows, Cab = a = aa! =
b!
. Therefore, the computational complexity of finding out the
a!(b−a)!
right MAi is given in Eq. (3).

T (a, b, ci ) =

b!
a!(b − a)!

×

i


ci .

(3)

i =1

It means the attempts cannot be accomplished within a polynomial
time, which has conflict with the assumed condition. The
correctness is proved.
6.2. Experimental configuration
We examined the performances of the proposed mechanism
via an experimental research. The evaluations had two parts,
which included semantic matching evaluations and efficiency
measurements.
First, we simulated the semantic matching processes to evaluate the time consumptions by configuring two main experimental
settings.

• Setting 1: We configured two variables in evaluations, namely
Q and Uinput (i), and measured them in multiple experimental rounds. The configurations are {Q, Uinput (i)}
=

Moreover, for the purpose of the efficiency measurement, we
generated a simulator using all algorithms given in Section 5.
Both security and efficiency were considered for examining the
performances of the proposed algorithms. The comparison was
given between the proposed P2DS and CP-ABE [37].
Next, for simulating the P2DS executions, our experimental
configurations were given as follows. The experiment was
implemented on an HP server configuring Ubuntu 15.04, Xeon
E5 2.4 GHz 6-core CPU, and 16 GB memory. We defined two
parameters to examine the implementations of P2DS, including
the number of attributes and the file sizes. The outcomes of the
experimental results were determined by the length of execution
time.
6.3. Experimental results
We illustrated a few experimental results in this section.
The experimental results were illustrated in figures, which were
associated with the experimental settings given in Section 6.2.
Fig. 8 represented experimental results showing different time
consumptions implementing Settings from 1–1 to 1–4. These
experimental results were based on 50 rounds of experiments.
According to the exhibitions of the figure, the crucial factor
influencing the semantic matching processes is the number of the
data user inputs.
Fig. 9 represented experimental results showing the growth
trends when the number of the data user inputs went up under
the same access control scenario. A positive relationship between
the time consumption and the number of the data user inputs was
shown in the figure.
Fig. 10 exhibits a comparison of private key generation time
with using different sets of the attributes between P2DS and CPABE. Two schemes have similar performances in this evaluation.
The number of attributes was ranged between 2 and 50. The
trendline shown in Fig. 10 represents an expected uptrend, which
is close to a linear distribution. The generation time grows up when
the number of determinative attributes becomes larger. However,
there are a number of curves, which are caused by the different
configurations at the determinative gates, ‘‘∨’’ and ‘‘∧’’. The gate
type ‘‘∧’’ requires a bit longer time since the computations need
more recursions.
Fig. 11 represents comparisons decryption time with various
targeted file sizes between P2DS and CP-ABE. The range of file
settings is from 2 MB to 512 MB. Our proposed scheme performs

Fig. 9. Some experimental results for semantic access control evaluations implementing experimental setting 2.

428

M. Qiu et al. / Future Generation Computer Systems 80 (2018) 421–429

Fig. 10. Comparisons of private key generation time between P2DS and CP-ABE
under different number of attributes.

Fig. 11. The comparisons of the decryption time between P2DS and CP-ABE for
different file sizes.

similar to CP-ABE. Both schemes dramatically go up while the
targeted file size is larger than 64 MB.
The results depict that the proposed scheme is capable of
solving complex decryption determination problems. A large
amount of data users behind the clouds can be supported by the
proposed mechanism. According to our examinations, the outputs
exactly match our configurations, which means the determinations
are secure.
7. Conclusions
This paper proposed a novel scheme, P2DS, that aimed to initiative secure sensitive data for mobile clouds in the financial
industry. The proposed approach mainly had four algorithms, including SDAA, CDAA, A-SAC, and PDA algorithms. Using the proposed scheme can enable data owners to proactively determine
which data users can access the data, even though the technical
environment is dynamic. This paper was a novel attempt of protecting data in the dynamic operating cloud-based environment,
which was exactly designed for the financial industry.
Acknowledgment
The first author’s work was supported by NSF CNS-1457506 and
NSF CNS-1359557.
References
[1] K. Guo, Y. Yuan, N. Archer, C. Connelly, Understanding nonmalicious security
violations in the workplace: A composite behavior model, J. Manage. Inf. Syst.
28 (2) (2011) 203–236.
[2] F. Hu, M. Qiu, J. Li, T. Grant, D. Taylor, S. McCaleb, L. Butler, R. Hamner, A review
on cloud computing: Design challenges in architecture and security, J. Comput.
Inf. Technol. 19 (1) (2011) 25–55.
[3] M. Qiu, L. Zhang, Z. Ming, Z. Chen, X. Qin, L. Yang, Security-aware optimization
for ubiquitous computing systems with SEAT graph approach, J. Comput.
System Sci. 79 (5) (2013) 518–529.
[4] M. Qiu, M. Zhong, J. Li, K. Gai, Z. Zong, Phase-change memory optimization
for green cloud with genetic algorithm, IEEE Trans. Comput. 64 (12) (2015)
3528–3540.

[5] K. Gai, S. Li, Towards cloud computing: a literature review on cloud
computing and its development trends, in: IEEE 4th International Conference
on Multimedia Information Networking and Security, Nanjing, China, 2012,
pp. 142–146.
[6] J. Wang, M. Gupta, R. Raj, Insider threats in a financial institution: Analysis of
attack-proneness of information systems applications, MIS Q. 39 (1) (2015)
91–112.
[7] D. Yadron, E. Glazer, New report says computer criminals stole millions
from banks, February 2015. http://www.wsj.com/articles/new-report-sayscomputer-criminals-stole-millions-from-banks-1424033504.
[8] S. Mithas, A. Tafti, I. Bardhan, J. Goh, Information technology and firm
profitability: mechanisms and empirical evidence, MIS Q. 36 (1) (2012)
205–224.
[9] R. Shiller, The Subprime Solution: How Today’s Global Financial Crisis
Happened, and What to Do About It, Princeton University Press, 2012.
[10] Y. Li, W. Dai, Z. Ming, M. Qiu, Privacy protection for preventing data overcollection in smart city, IEEE Trans. Comput. PP (99) (2015) 1–10.
[11] M. Qiu, Z. Chen, Z. Ming, X. Qin, J. Niu, Energy-aware data allocation with
hybrid memory for mobile cloud systems, IEEE Syst. J. (2014) 1–10.
[12] K. Gai, M. Qiu, B. Thuraisingham, L. Tao, Proactive attribute-based secure
data schema for mobile cloud in financial industry, in: The IEEE International Symposium on Big Data Security on Cloud, New York, USA, 2015,
pp. 1332–1337.
[13] J. Wang, M. Qiu, B. Guo, High reliable real-time bandwidth scheduling for
virtual machines with hidden Markov predicting in telehealth platform, Future
Gener. Comput. Syst. 49 (2015) 68–76.
[14] C. Hu, N. Zhang, H. Li, X. Cheng, X. Liao, Body area network security: a fuzzy
attribute-based signcryption scheme, IEEE J. Sel. Areas Commun. 31 (9) (2013)
37–46.
[15] A. Abbas, S. Khan, A review on the state-of-the-art privacy-preserving
approaches in the e-health clouds, IEEE J. Biomed. Health Inform. 18 (4) (2014)
1431–1441.
[16] M. Li, S. Yu, Y. Zheng, K. Ren, W. Lou, Scalable and secure sharing of personal
health records in cloud computing using attribute-based encryption, IEEE
Trans. Parallel Distrib. Syst. 24 (1) (2013) 131–143.
[17] X. Liang, R. Lu, L. Chen, X. Lin, X. Shen, PEC: a privacy-preserving emergency
call scheme for mobile healthcare social networks, J. Commun. Netw. 13 (2)
(2011) 102–112.
[18] P. Yong, Z. Wei, X. Feng, Z. Dai, G. Yang, D. Chen, Secure cloud storage based
on cryptographic techniques, J. China Univ. Posts Telecommun. 19 (2012)
182–189.
[19] T. Arnold, M. Check, E. Dames, J. Dayka, S. Dragone, D. Evans, F. Santiago, M.
Hocker, R. Kisley, T. Morris, et al., The next generation of highly reliable and
secure encryption for the IBM z13, IBM J. Res. Dev. 59 (4/5) (2015) 6–1.
[20] H. Lin, An empirical investigation of mobile banking adoption: The effect of
innovation attributes and knowledge-based trust, Int. J. Inf. Manage. 31 (3)
(2011) 252–260.
[21] X. Ma, R. Li, Z. Lu, W. Wang, Mining constraints in role-based access control,
Math. Comput. Modelling 55 (1) (2012) 87–96.
[22] J. Li, M. Qiu, Z. Ming, G. Quan, X. Qin, Z. Gu, Online optimization for scheduling
preemptable tasks on IaaS cloud systems, J. Parallel Distrib. Comput. 72 (5)
(2012) 666–677.
[23] H. Zhao, M. Chen, M. Qiu, K. Gai, M. Liu, A novel pre-cache schema for high
performance android system, Future Gener. Comput. Syst. 56 (2015) 766–772.
[24] K. Gai, M. Qiu, L. Tao, Y. Zhu, Intrusion detection techniques for mobile cloud
computing in heterogeneous 5G, Secur. Commun. Netw. (2015) 1–10.
[25] J. Li, J. Li, X. Chen, C. Jia, W. Lou, Identity-based encryption with outsourced
revocation in cloud computing, IEEE Trans. Comput. 64 (2) (2015) 425–437.
[26] Y. Tang, P. Lee, J. Lui, R. Perlman, Secure overlay cloud storage with access
control and assured deletion, IEEE Trans. Dependable Secure Comput. 9 (6)
(2012) 903–916.
[27] J. Xiong, X. Liu, Z. Yao, J. Ma, Q. Li, K. Geng, P. Chen, A secure data selfdestructing scheme in cloud computing, IEEE Trans. Cloud Comput. 2 (4)
(2014) 448–458.
[28] Z. Wan, J. Liu, R. Deng, HASBE: a hierarchical attribute-based solution for
flexible and scalable access control in cloud computing, IEEE Trans. Inform.
Forensics Secur. 7 (2) (2012) 743–754.
[29] J. Hur, D. Noh, Attribute-based access control with efficient revocation in
data outsourcing systems, IEEE Trans. Parallel Distrib. Syst. 22 (7) (2011)
1214–1221.
[30] S. Ruj, M. Stojmenovic, A. Nayak, Decentralized access control with anonymous
authentication of data stored in clouds, IEEE Trans. Parallel Distrib. Syst. 25 (2)
(2014) 384–394.
[31] M. Qiu, E. Sha, Cost minimization while satisfying hard/soft timing constraints
for heterogeneous embedded systems, ACM Trans. Des. Autom. Electron. Syst.
14 (2) (2009) 25.
[32] M. Qiu, J. Niu, L. Yang, X. Qin, S. Zhang, B. Wang, Energy-aware loop
parallelism maximization for multi-core DSP architectures, in: Proceedings
of the 2010 IEEE/ACM International Conference on Green Computing and
Communications & International Conference on Cyber, Physical and Social
Computing, IEEE Computer Society, 2010, pp. 205–212.
[33] T. Jung, X. Li, Z. Wan, M. Wan, Control cloud data access privilege and
anonymity with fully anonymous attribute-based encryption, IEEE Trans.
Inform. Forensics Secur. 10 (1) (2015) 190–199.
[34] J. Li, X. Huang, J. Li, X. Chen, Y. Xiang, Securely outsourcing attribute-based
encryption with checkability, IEEE Trans. Parallel Distrib. Syst. 25 (8) (2014)
2201–2210.
[35] J. Han, W. Susilo, Y. Mu, J. Zhou, M. Au, Improving privacy and security
in decentralized ciphertext-policy attribute-based encryption, IEEE Trans.
Inform. Forensics Secur. 10 (3) (2015) 665–678.

M. Qiu et al. / Future Generation Computer Systems 80 (2018) 421–429
[36] J. Hur, Improving security and efficiency in attribute-based data sharing, IEEE
Trans. Knowl. Data Eng. 25 (10) (2013) 2271–2282.
[37] J. Bethencourt, A. Sahai, B. Waters, Ciphertext-policy attribute-based encryption, in: IEEE Symposium on Security and Privacy, Berkeley, CA, USA, 2007,
pp. 321–334.

Meikang Qiu received the B.E. and M.E. degrees from
Shanghai Jiao Tong University, China in 1992 and 1998.
He received the M.S. and Ph.D. degree of Computer
Science from University of Texas at Dallas in 2003 and
2007, respectively. Currently, he is an Associate Professor
of Computer Science at Pace University and Adjunct
Professor at Columbia University. He had worked at
Chinese Helicopter R&D Institute, IBM, etc. for 9 years.
Currently, he is an IEEE Senior member and ACM Senior
member. His research interests include cloud computing,
big data storage and security, embedded systems, cyber
security, hybrid memory, heterogeneous systems, mobile and sensor networks,
operating systems, optimization, intelligent systems, cyber-physical systems, etc.
A lot of novel results have been produced and most of them have already been
reported to research community through high-quality journal and conference
papers. He has published 4 books, 300 peer-reviewed journal and conference
papers (including 140 journal articles, 160 conference papers, 40+ IEEE/ACM
Transactions papers), and 3 patents. He has won ACM Transactions on Design
Automation of Electrical Systems (TODAES) 2011 Best Paper Award. His paper about
cloud computing has been published in JPDC (Journal of Parallel and Distributed
Computing, Elsevier) and ranked #1 in Top Hottest 25 Papers of JPDC 2012.
He has won another 4 Conference Best Paper Awards (IEEE/ACM ICESS’12, IEEE
GreenCom’10, IEEE EUC’10, IEEE CSE’09) in recent four years. Currently he is an
associate editor of IEEE Transactions on Computer and IEEE Transactions on Cloud
Computing. He is the General Chair of IEEE HPCC/ICESS/CSS 2015, IEEE CSCloud
2015 (Cyber Security and Cloud Computing) and NSS’15 (Network and System
Security), Steering Committee Chair of IEEE BigDataSecurity 2015, and Program
Chair of IEEE SOSE/MobileCloud/BigData 2015. He has won Navy Summer Faculty
Award in 2012 and Air Force Summer Faculty Award in 2009. His research is
supported by US government such as NSF, Air Force, Navy and companies such as
Nokia, TCL, and Cavium.
Keke Gai holds degrees from Nanjing University of
Science and Technology (B.Eng.), the University of British
Columbia (M.E.T) and Lawrence Technological University
(M.B.A. and M.S.). He is currently pursuing his Ph.D.
at Department of Computer Science at Pace University,
New York, USA. Keke Gai has published more than 40
peer-reviewed journal or conference papers, 10+ journal
papers and 30+ conference papers. He has been granted
two IEEE Best Paper Awards by IEEE conferences (IEEE
CSCloud’15, IEEE BigDataSecurity’15) in recent years.
He is involved in a number of professional/academic
associations, including ACM and IEEE. His research interests include mobile
cloud computing, cyber security, combinatorial optimization, business process
modeling, enterprise architecture, and Internet computing. He also served an
amount of academic activities, such as IEEE CSCloud’15, IEEE BigDataSecurity’15,
IEEE HPCC/ICESS/CSS’15, and CONISAR’13.

429

Dr. Bhavani Thuraisingham is the Louis A. Beecherl,
Jr. Distinguished Professor of Computer Science and the
Executive Director of the Cyber Security Research and
Education Institute (CSI) at The University of Texas at
Dallas. She is an elected Fellow of IEEE, the AAAS, the
British Computer Society, and the SPDS (Society for Design
and Process Science). She received several prestigious
awards including IEEE Computer Society’s 1997 Technical
Achievement Award for ‘‘outstanding and innovative
contributions to secure data management’’, the 2010 ACM
SIGSAC (Association for Computing Machinery, Special
Interest Group on Security, Audit and Control) Outstanding Contributions Award
for ‘‘seminal research contributions and leadership in data and applications security
for over 25 years’’ and the SDPS Transformative Achievement Gold Medal for her
contributions to interdisciplinary research. She has unique experience working
in the commercial industry (Honeywell), federal research laboratory (MITRE), US
government (NSF) and academia and her 35 year career includes research and
development, technology transfer, product development, program management,
and consulting for the federal government. Her work has resulted in 100+ journal
articles, 200+ conference papers, 100+ keynote and featured addresses, eight
US patents (three pending) and fifteen books (two pending). She received the
prestigious earned higher doctorate degree (DEng) from the University of Bristol
England in 2011 for her published work in secure data management since her Ph.D.
She has been a strong advocate for women in computing and has delivered featured
addresses at events organized by the CRA-W (Computing Research Association) and
SWE (Society for Women Engineers).

Dr. Lixin Tao is a tenured professor and chairperson of
the Computer Science Department of Pace University in
New York. He is also the Chair of Ph.D. in Computer
Science program and the Doctorate Professional Studies
in Computing program. He received his Ph.D. in Computer
Science from University of Pennsylvania in 1988, and
conducted computer science research and teaching with
Concordia University in Montreal for 13 years before
he joined Pace University in 2001. His research interest
includes cloud computing, Internet and Web computing,
software engineering, security, parallel and distributed
computing, and combinatorial optimization. He has published over 200 original
papers in refereed international journals and conference proceedings. He is an IEEE
senior member, and national ABET evaluator for computer science programs.

Hui Zhao received the B.E. and M.S. degrees from Xi’an
Technology University, Shanxi and Henan University,
Henan, China, in 2000 and 2008, respectively. He is a Ph.D.
student at the Seidenberg School of Computer Science and
Information Systems of Pace University. He is currently
an associate professor in the Software School of Henan
University.

